name: Workflow
on:
  push:
    branches:
      - 'main'
  pull_request: { }


jobs:
  required-meta:
    uses: BlindfoldedSurgery/actions-meta/.github/workflows/required.yml@v1

  check-commits:
    uses: BlindfoldedSurgery/actions-releases/.github/workflows/commitizen-check.yml@v2
    if: false
    with:
      python-version: "3.13"

  test:
    name: Test
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
        with:
          install_args: dart
      - name: Get dependencies
        run: dart pub get
      - name: Run code generation
        run: dart run build_runner build
      - name: Run tests
        run: dart test --file-reporter json:test-results.json --coverage=.coverage
      - name: Install coverage package
        run: dart pub global activate coverage
      - name: Convert to LCOV
        run: dart pub global run coverage:format_coverage --report-on=lib --lcov -o ./.coverage/lcov.info -i ./.coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: .coverage/lcov.info

  integration_test:
    name: Integration Tests
    concurrency: integration
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
        with:
          install_args: dart
      - name: Get dependencies
        run: dart pub get
      - name: Run code generation
        run: dart run build_runner build
      - name: Run tests
        run: dart test -P integration --file-reporter json:test-results.json --coverage=.coverage
        env:
          CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
      - name: Install coverage package
        run: dart pub global activate coverage
      - name: Convert to LCOV
        run: dart pub global run coverage:format_coverage --report-on=lib --lcov -o ./.coverage/lcov.info -i ./.coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: .coverage/lcov.info

  check_format:
    name: Check Format
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
        with:
          install_args: dart
      - name: Check lib formatting
        run: dart format lib --set-exit-if-changed
      - name: Check test formatting
        run: dart format test --set-exit-if-changed
      - name: Check example formatting
        run: dart format example --set-exit-if-changed

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
        with:
          install_args: dart
      - name: Get dependencies
        run: dart pub get
      - name: Run code generation
        run: dart run build_runner build
      - name: Run Analysis
        run: dart analyze --fatal-infos
